{"version":3,"file":"index.umd.min.js","sources":["../../../.yarn/berry/cache/@kurkle-color-npm-0.3.2-98f2086013-10c0.zip/node_modules/@kurkle/color/dist/color.esm.js","../../../.yarn/berry/cache/chart.js-npm-4.4.4-714602763b-10c0.zip/node_modules/chart.js/dist/chunks/helpers.segment.js","../../../.yarn/berry/cache/chart.js-npm-4.4.4-714602763b-10c0.zip/node_modules/chart.js/dist/chart.js","../src/controllers/utils.ts","../src/elements/render.ts","../src/elements/BarWithErrorBar.ts","../src/elements/PointWithErrorBar.ts","../src/elements/ArcWithErrorBar.ts","../src/controllers/tooltip.ts","../src/animate.ts","../src/controllers/base.ts","../src/controllers/patchController.ts","../src/controllers/BarWithErrorBarsController.ts","../src/controllers/LineWithErrorBarsController.ts","../src/controllers/ScatterWithErrorBarsController.ts","../src/controllers/PolarAreaWithErrorBarsController.ts","../src/index.umd.ts"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.4\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.4\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.4\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","endsWith","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","parseFloat","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","array","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_alignStartEnd","align","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","drawPointLegend","_isPointInArea","point","area","margin","clipArea","unclipArea","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","_addGrace","minmax","change","dimension","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","property","el","getPropertyValue","getStyle","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","LineController","spanGaps","_dataset","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","skip","nullData","iPixel","vPixel","firstPoint","lastPoint","updateControlPoints","PolarAreaController","animateRotate","animateScale","startAngle","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","angleLines","circular","pointLabels","innerRadius","outerRadius","bind","arcs","_updateRadius","minSize","radiusLength","cutoutPercentage","getVisibleDatasetCount","animationOpts","centerX","xCenter","centerY","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","endAngle","getDistanceFromCenterForValue","ScatterController","registry","getElement","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","circumference","borderJoinStyle","inner","borderAlign","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inRange$1","hitRadius","PointElement","hoverBorderWidth","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","rtlHelper","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","direction","original","getPropertyPriority","setProperty","prevTextDirection","overrideTextDirection","textDirection","restoreTextDirection","positionChanged","_positionChanged","_ignoreReplayEvents","handleEvent","plugin_tooltip","_element","afterInit","_args","afterDraw","afterEvent","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","_setMinAndMaxByKey","LinearScale","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","pointPosition","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getPointPositionForValue","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","allModelKeys","modelKeys","calculateScale","NUMERIC_SCALE_TYPES","isNumericScale","errorBarDefaults","errorBarLineWidth","errorBarColor","errorBarWhiskerLineWidth","errorBarWhiskerRatio","errorBarWhiskerSize","errorBarWhiskerColor","errorBarDescriptors","styleKeys","resolveMulti","vMin","vMax","vMinArr","vMaxArr","_","resolveOption","calculateHalfSize","renderErrorBar","elem","xMin","xMax","mi","ma","halfHeight","drawErrorBarHorizontal","_a","_b","yMin","yMax","drawErrorBarVertical","_c","_d","renderErrorBarArc","rMin","rMax","cosAngle","sinAngle","minCos","minSin","maxCos","maxSin","eX","eY","drawErrorBarArc","BarWithErrorBar","PointWithErrorBar","ArcWithErrorBar","reverseOrder","generateBarTooltip","every","interpolateArrayOption","interpolator","isV","animationHints","numberArray","colorArray","superMethod","computeExtrema","vm","op","parseErrorNumberData","vMinMin","vMaxMax","parseErrorLabelData","patchController","BarWithErrorBarsController","patchedScale","parseErrorData","BarWithErrorBarsChart","LineWithErrorBarsController","updateElementScale","LineWithErrorBarsChart","ScatterWithErrorBarsController","subLabel","ScatterWithErrorBarsChart","PolarAreaWithErrorBarsController","getMinMaxImpl","toAngle","valueRadius","resetRadius","calculatePolarScale","bak","PolarAreaWithErrorBarsChart"],"mappings":"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","x_google_ignoreList":[0,1,2]}